==3508== Memcheck, a memory error detector
==3508== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
==3508== Using Valgrind-3.6.1 and LibVEX; rerun with -h for copyright info
==3508== Command: ./a
==3508== Parent PID: 1681
==3508== 
==3508== Thread 2:
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x4A06EA2: strcpy (mc_replace_strmem.c:311)
==3508==    by 0x4057B3: GetUserList (user.c:296)
==3508==    by 0x40259C: Display (server.c:283)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x4057C6: GetUserList (user.c:298)
==3508==    by 0x40259C: Display (server.c:283)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x406485: GetOnline (user.c:779)
==3508==    by 0x4025B7: Display (server.c:284)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x4A079BC: strcmp (mc_replace_strmem.c:538)
==3508==    by 0x405ED9: GetFriendList (user.c:558)
==3508==    by 0x402620: Display (server.c:286)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x405EDC: GetFriendList (user.c:558)
==3508==    by 0x402620: Display (server.c:286)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x4A079C2: strcmp (mc_replace_strmem.c:538)
==3508==    by 0x405ED9: GetFriendList (user.c:558)
==3508==    by 0x402620: Display (server.c:286)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x405EFC: GetFriendList (user.c:561)
==3508==    by 0x402620: Display (server.c:286)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x4A079BC: strcmp (mc_replace_strmem.c:538)
==3508==    by 0x404B94: Ser_DisPlayMsg (windows.c:750)
==3508==    by 0x402685: Display (server.c:288)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x4A079BC: strcmp (mc_replace_strmem.c:538)
==3508==    by 0x404BEC: Ser_DisPlayMsg (windows.c:759)
==3508==    by 0x402685: Display (server.c:288)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x405F84: GetFriendList (user.c:577)
==3508==    by 0x402620: Display (server.c:286)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x404B97: Ser_DisPlayMsg (windows.c:750)
==3508==    by 0x402685: Display (server.c:288)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Conditional jump or move depends on uninitialised value(s)
==3508==    at 0x404BA7: Ser_DisPlayMsg (windows.c:752)
==3508==    by 0x402685: Display (server.c:288)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508== 
==3508== Invalid read of size 1
==3508==    at 0x4A06E9A: strcpy (mc_replace_strmem.c:311)
==3508==    by 0x405F38: GetFriendList (user.c:566)
==3508==    by 0x402620: Display (server.c:286)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508==  Address 0x7f5ca8000b90 is not stack'd, malloc'd or (recently) free'd
==3508== 
==3508== 
==3508== Process terminating with default action of signal 11 (SIGSEGV)
==3508==  Access not within mapped region at address 0x7F5CA8000B90
==3508==    at 0x4A06E9A: strcpy (mc_replace_strmem.c:311)
==3508==    by 0x405F38: GetFriendList (user.c:566)
==3508==    by 0x402620: Display (server.c:286)
==3508==    by 0x3E79207B40: start_thread (in /lib64/libpthread-2.14.1.so)
==3508==    by 0x3E78EE0E6C: clone (in /lib64/libc-2.14.1.so)
==3508==  If you believe this happened as a result of a stack
==3508==  overflow in your program's main thread (unlikely but
==3508==  possible), you can try to increase the size of the
==3508==  main thread stack using the --main-stacksize= flag.
==3508==  The main thread stack size used in this run was 8388608.
==3508== 
==3508== HEAP SUMMARY:
==3508==     in use at exit: 370,893 bytes in 214 blocks
==3508==   total heap usage: 316 allocs, 102 frees, 381,835 bytes allocated
==3508== 
==3508== LEAK SUMMARY:
==3508==    definitely lost: 704 bytes in 1 blocks
==3508==    indirectly lost: 0 bytes in 0 blocks
==3508==      possibly lost: 544 bytes in 2 blocks
==3508==    still reachable: 369,645 bytes in 211 blocks
==3508==         suppressed: 0 bytes in 0 blocks
==3508== Rerun with --leak-check=full to see details of leaked memory
==3508== 
==3508== For counts of detected and suppressed errors, rerun with: -v
==3508== Use --track-origins=yes to see where uninitialised values come from
==3508== ERROR SUMMARY: 772 errors from 13 contexts (suppressed: 6 from 6)
