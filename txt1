==18627== Memcheck, a memory error detector
==18627== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
==18627== Using Valgrind-3.6.1 and LibVEX; rerun with -h for copyright info
==18627== Command: ./b
==18627== Parent PID: 17725
==18627== 
==18627== Thread 4:
==18627== Invalid read of size 8
==18627==    at 0x401D6B: RecvMsg (client.c:198)
==18627==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==18627== 
==18627== 
==18627== Process terminating with default action of signal 11 (SIGSEGV)
==18627==  Access not within mapped region at address 0x10
==18627==    at 0x401D6B: RecvMsg (client.c:198)
==18627==  If you believe this happened as a result of a stack
==18627==  overflow in your program's main thread (unlikely but
==18627==  possible), you can try to increase the size of the
==18627==  main thread stack using the --main-stacksize= flag.
==18627==  The main thread stack size used in this run was 8388608.
==18627== 
==18627== HEAP SUMMARY:
==18627==     in use at exit: 363,280 bytes in 210 blocks
==18627==   total heap usage: 247 allocs, 37 frees, 371,417 bytes allocated
==18627== 
==18627== LEAK SUMMARY:
==18627==    definitely lost: 0 bytes in 0 blocks
==18627==    indirectly lost: 0 bytes in 0 blocks
==18627==      possibly lost: 816 bytes in 3 blocks
==18627==    still reachable: 362,464 bytes in 207 blocks
==18627==         suppressed: 0 bytes in 0 blocks
==18627== Rerun with --leak-check=full to see details of leaked memory
==18627== 
==18627== For counts of detected and suppressed errors, rerun with: -v
==18627== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
